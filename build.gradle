import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

buildscript {
    ext {
        kotlinVersion = '1.2.31'
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath('io.spring.gradle:propdeps-plugin:0.0.9.RELEASE')
        classpath('com.bmuschko:gradle-docker-plugin:3.2.5')
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'com.bmuschko.docker-remote-api'

group = 'uk.sky.poc'
version = '1.1.0'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

repositories {
    mavenCentral()
    jcenter()
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {
    compile('org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5')
    compile('com.google.code.gson:gson:2.8.2')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('org.springframework.kafka:spring-kafka')
    compile('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    compile('org.jetbrains.kotlin:kotlin-reflect')
    compile('it.unimi.dsi:fastutil:8.1.1')
    compile('net.openhft:zero-allocation-hashing:0.8')
    compile('org.mapdb:mapdb:3.0.5')
    compile('com.lmax:disruptor:3.4.1')
    compile('log4j:log4j:1.2.17')
    optional('org.springframework.boot:spring-boot-configuration-processor')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')

//    compile('com.hazelcast:hazelcast-spring:3.9.3')
//    compile('com.hazelcast:hazelcast-zookeeper:3.6.3')
//    compile('org.apache.curator:curator-x-discovery:2.12.0')
}

compileJava.dependsOn(processResources)

bootRun {
    jvmArgs "-DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
}

docker {
    registryCredentials {
        url = 'https://artifacts.ath.bskyb.com:5001'
        username = 'jenkins-olisipo'
        password = 'BiJpewyXLcyypoLDU9UpMi46AdXCHTr6zd4VvdFTbLtZQrfooY'
    }
}

task buildImage(type: DockerBuildImage, dependsOn: bootJar) {
    inputDir = projectDir
    tag = "artifacts.ath.bskyb.com:5001/olisipo/poc/spring-boot-split-api:$version"
}

task pushImage(type: DockerPushImage, dependsOn: buildImage) {
    imageName = buildImage.tag
}